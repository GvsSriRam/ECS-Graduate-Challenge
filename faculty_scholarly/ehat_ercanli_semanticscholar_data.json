{
  "name": "E. Ercanli",
  "affiliation": "",
  "interests": [],
  "citedby": 74,
  "h_index": 4,
  "i10_index": 0,
  "top_primary_author_publications": [
    {
      "title": "A register file and scheduling model for application specific processor synthesis",
      "year": 1996,
      "abstract": "We outline general design steps of our synthesis tool to realize application specific co-processors such that for a given scientific application having intensive iterative computations especially with recurrences, a VLIW type of co-processor is synthesized and realized, and an accompanying parallel code is generated. We introduce a novel register file model, Shifting Register File (SRF), based on cyclic regularity of register file accesses; and a simple method, Expansion Scheduling, for scheduling iterative computations, which is based on cyclic regularity of loops. We also present a variable-register file allocation method and show how simple logic units can be used to activate proper registers at run time through an example.",
      "venue": "Design Automation Conference, Proceedings",
      "citations": 5,
      "authors": [
        "E. Ercanli",
        "C. Papachristou"
      ],
      "url": "https://www.semanticscholar.org/paper/8a4bd80bb0718b2371298c65a1b51975a282be75"
    },
    {
      "title": "Data recomputation based optimizations in embedded systems",
      "year": 2008,
      "abstract": "Recent advancements in embedded systems have brought new challenges for industry and academia. In order to meet the demand for the computational power required by the today’s applications with large data set sizes, the trend in computing systems is to design fast architectures that accommodate large on-chip memories and consume less power. Unlike high-end computing systems where the performance is the only dominant metric, embedded systems have several (sometimes equally important) metrics of interest. Therefore, in addition to targeting one optimization parameter for a given system, an embedded system designer may need to perform several tradeoffs among these metrics to generate an acceptable output. Among these metrics are performance, power, energy, memory space consumption, and reliability. \nIn this dissertation, we propose data recomputation in order to optimize the design metrics, namely performance, power/energy utilization, and memory space consumption in single and multi-core embedded systems running data-intensive applications. The proposed approach is based on recomputing the value of a data element by using other available data elements, if it is beneficial in terms of the target optimization metric, instead of explicitly accessing the requested data. As an example, the proposed data recomputation based approach in Chapter 5 aims at improving the performance of chip multi-processors by reducing the number of off-chip memory accesses, which is a major contributor to the total execution time. Specifically, the approach tries to compute the value of an off-chip data using the available on-chip data elements, if it is beneficial for performance, instead of performing an off-chip memory access. \nAs today’s embedded applications typically process large data-set sizes, we specifically target data-intensive applications in this dissertation. We study not only single-processor based embedded systems but also multi-core architectures. In addition to traditional hardware-controlled memory structures, we also propose novel memory utilization techniques for software-managed memory architectures, such as Scratch-Pad Memory, which are widely used in embedded systems. The proposed approach also performs various tradeoffs such as performance/memory space consumption and energy/performance for a given embedded architecture. \nThe effectiveness of the proposed approach is tested and the experimental evaluation is presented in the context of various architectural setups. The experimental results collected using data-intensive benchmarks clearly show the effectiveness of the data recomputation.",
      "venue": "",
      "citations": 0,
      "authors": [
        "E. Ercanli",
        "M. Kandemir",
        "Hakduran Koc"
      ],
      "url": "https://www.semanticscholar.org/paper/7225b45768649f8383f8dae054a865f17381421d"
    },
    {
      "title": "Automated Code Generation for Database Applications",
      "year": 2005,
      "abstract": null,
      "venue": "International Conference on Intelligent and Adaptive Systems and Software Engineering",
      "citations": 0,
      "authors": [
        "E. Ercanli",
        "N. E. Ozgencil",
        "Murat K. Gungor"
      ],
      "url": "https://www.semanticscholar.org/paper/035f875c22542d3fa49e1b02198d864211528854"
    }
  ],
  "top_secondary_author_publications": [
    {
      "title": "Minimizing Energy Consumption of Banked Memories Using Data Recomputation",
      "year": 2006,
      "abstract": "Banking has been identified as one of the effective methods using which memory energy can be reduced. We propose a novel approach that improves the energy effectiveness of banked memory architecture by performing extra computations if doing so makes it unnecessary to reactivate a bank which is in the low-power operating mode. More specifically, when an access to a bank, which is in the low-power mode, is to be made, our approach first checks whether the data required from that bank can be recomputed by using the data that are currently stored in already active banks. If this is the case, we do not turn on the bank in question, and instead, recalculate the value of the requested data using the values of the data stored in the active banks. Given the fact that the contribution of the leakage consumption to overall energy budget keeps increasing, the proposed approach has the potential of being even more attractive in the future. Our experimental results collected so far clearly show that this recomputation based approach can reduce energy consumption significantly",
      "venue": "ISLPED'06 Proceedings of the 2006 International Symposium on Low Power Electronics and Design",
      "citations": 35,
      "authors": [
        "Hakduran Koc",
        "O. Ozturk",
        "M. Kandemir",
        "S. Narayanan",
        "E. Ercanli"
      ],
      "url": "https://www.semanticscholar.org/paper/ef37c323a83956beed1acc4605a142bb0fd63b99"
    },
    {
      "title": "Reducing Off-Chip Memory Access Costs Using Data Recomputation in Embedded Chip Multi-processors",
      "year": 2007,
      "abstract": "There have been numerous efforts on Scratch-Pad Memory (SPM) management in the context of single CPU systems and, more recently, multi-processor architectures. This paper presents a novel SPM space utilization strategy, for embedded chip multi-processor systems, based on recomputing the value of an off-chip data element using on-chip (SPM resident) data elements. In doing so, our goal is to eliminate the corresponding off-chip memory access that would otherwise be performed, and save execution cycles and power. This paper presents the details of a compiler algorithm that implements this approach and reports the experimental data we collected using six data-intensive applications. Our results indicate that, on a four processor chip multiprocessor, the average performance improvement our approach brings is about 11.8%, over a state-of-the-art SPM management scheme. We also observed that there is a specific range of total SPM size/total data size ratios, for which our approach generates the best results. Finally, our results also show that the proposed approach brings consistent improvements when the number of CPUs is varied between 2 and 16.",
      "venue": "2007 44th ACM/IEEE Design Automation Conference",
      "citations": 28,
      "authors": [
        "Hakduran Koc",
        "M. Kandemir",
        "E. Ercanli",
        "O. Ozturk"
      ],
      "url": "https://www.semanticscholar.org/paper/de7e29f7712b4670b83a3332c62dca181a9d8137"
    },
    {
      "title": "Exploiting large on-chip memory space through data recomputation",
      "year": 2010,
      "abstract": "This paper presents a novel on-chip memory space utilization strategy for architectures that accommodate large on-chip software-managed memories. In such architectures, the access latencies of data blocks are typically proportional to the distance between the processor and the requested data. Considering such an on-chip memory hierarchy, we propose to recompute the value of an on-chip data, which is far from the processor, using the closer data elements instead of directly accessing the far data if it is beneficial to do so in terms of performance. This paper presents the details of a compiler algorithm that implements the proposed approach and reports the experimental data collected using six data-intensive applications programs. Our experimental evaluation indicates 8.2% performance improvement, on the average, over a state-of-the-art on-chip memory management strategy and shows consistent improvements for varying on-chip memory sizes and different data access latencies.",
      "venue": "23rd IEEE International SOC Conference",
      "citations": 6,
      "authors": [
        "Hakduran Koc",
        "M. Kandemir",
        "E. Ercanli"
      ],
      "url": "https://www.semanticscholar.org/paper/20db4b4bbe9eef70c195fb0bcdaf42abc801fb37"
    }
  ]
}